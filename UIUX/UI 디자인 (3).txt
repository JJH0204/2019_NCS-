플렛폼과 인터페이스
스마트 폰은 input output 이 함께 사용됨
다른 것들은 input output이 따로 있었음


제품의 기능과 인터페이스 디자인


인터페이스의 종류
CUI : character user interface의 약자
MS- dos 에 대표되는 문자만으로 입력 표시하는 조작 계열


        GUI : graphical user interface의 약자
        글 이외에도 화면에 아이콘을 띄워 마우스를 이용하여 화면에 있는 아이콘을 클릭함


        WUI : Web user interface
        웹 페이지를 통하여 사용자가 원하는 정보를 목적에 맞게, 보기 편하고, 쉽게 남듬


        SUI : sound user interface
        음성으로 사용되는 소프트웨어 인터페이스




pc가 상대적으로 모바일보다 우월한 플렛폼이다. 하지만
접근성과 편의성에서 모바일이 압도적


모바일 환경의 특징
* 개인화
   * pc와 달리 개인의 사용자가 사용
* 편재성
   * 언제 어디서든 정보를 검색, 통신이 가능
* 편의성
   * 편재성과 연관 편리함
* 차별성
   * 개인에게 차별화된 서비스 사용가능, 개인화와 연관
* 즉시연결성
   * 개인화와 연관 , gps나 장치의 특화로 인해 바로 연결가능
* 지역 기반
   * gps


플렛폼의 차이로 인한 작동방식의 변화
결제 시스템의 변화
모바일 : 간접경쟁 위주
* 조작문제, 의사소통문제, 네트워크 문제, 화면 크기 문제 등
온라인 : 직접경쟁 위주




콘텐츠를 개발하는 과정
왜 ? 어디서? 어떻게? 언제?
중요 기능이나 콘텐츠 우선 배치
어플리케이션과 같은 최신 콘텐츠는 사용자가 읽고 이해하는 과정에서 기존의 책과는 차이가 있다.
세부조작 단계의 필요성에는 관심을 기울이지 않는 것이 사실


UI 일관성
일관성을 가지고 제품을 만들어야 기능을 찾기 쉬움
“ 과거 경험의 기대효과 “


UI 심미성
아름다움 , 화면과 어울림
스큐모피즘 : 사실적으로 유저에게 몰입감을 주는 방식
플랫 디자인 : 간단하고 심플한 디자인으로 유저가 확인하기 쉽도록 만드는 방식


효율일 좋은 UI 는 리소스으 양이 달라짐 ( 툴에 따라 다르지만 )
나인 슬라이스 ( 9-scale 기능을 활용)
확장성 있는 다양하게 활용 가능


좋은 인터페이스
* 직관적이어야 함 : 플레이어가 기대한대로 되도록 하는 것 , 간결하게 만드는 것이 도움이 됨
* 상호작용이 빨라야 함 : 기대한 반응이 나오지 않으면, 통제하고 있다는 느낌이 들지 않음, 0.1초 이내로 응답하지 않으면 문제가 있다고 느낌
* 플레이어의 Heat Map을 고려 : 플레이어의 주의가 인터페이스에 의해 분산 되지 않도록 함, 차라리 고르게 분포되도록


인터페이스 
* 게임 인터페이스 : 플레이어가 게임 세계와 상호작용하는 채널
* 게임 인터페이스의 목적 : 플레이어(유저가)가 통제하고 있다는 느낌을 받도록 해야함
* 기본 원리 : input과 output의 차이가 있어야함 플레이어가 뭔가를 컨트롤 하여 게임 세계에 변화를 주면 세계는 변화를 플레이어에게 보여줘야함
* 정보의 채널


경험 측면의 분류
* 경험위주로 정렬 후 관리
* 목표 경험, 획득 경험, 과정 경험, 변화 경험, 방해 경험 


게임 UI 설정
* 컨텐츠 추가 또한 염두
* 창을 나눠 창들의 위치와 포지션 값을 지정
* 각 모드에 맞춰 UI 설정해야함


모바일 게임 인터페이스와 인터랙션
* 버틑과 버튼 사이의 터치 영역을 크게 설정해야함
* 버튼 배치를 세로 보다는 가로가 효과적
* 터치 영역을 최소 44*29 이상으로 해야함 최소 7mm 는 확보해야 엄지로 터치가 가능
손과 인터페이스 
화면크기와 유저 사용 경험




1)씬 단위로 UI 플로우 차트 작성
2)UI를 씬 별로 나눈 이미지를 창과 팝업 창으로 구분하여 도식화 하여 흐름도를 작성해 보자




제작 과정
1. 기획 : 프로젝트의 전반적인 개념과 정보, 디자인이 이루어짐 ( 와이어프레임 - 도식화 도형 배치)
2. 디자인 : 결정된 컨셉을 시각화
시각화 단계에서 가장 중요한 것은 프로젝트가 가지는 성격에 맞춰 전체적인 테마와 스타일을 정한 후 일관성을 유지하는 것
3. 개발 : 실제로 사용자가 인터페이스를 다룰 수 있도록 개발자에 의해 프로그래밍
4. 화면 기준 용어를 많이 사용
네이밍 규칙을 준수해야함 ( 큰 카테고리에서 작은 순으로 진행 )
띄어쓰기 대신 ‘_’
5. 기준 디바이스 화면 설정 ( 최소, 최대 설정)
6. 가독성, 판독성 고민 ( serif, sanserif )
7. layout(열에 맞춰서 나열 하는 것들)
8. 2의 n제곱 크기로 이미지 제작
9. 백터와 비트맵 ( 벡터는 연산을 통해 만들어짐, 비트맵은 나인 슬라이스를 제외하면 나머지는 이미지가 잘리거나 변형된다.)
10. 벡터는 점의 갯수 많아지면 연산량 커짐, 다색이 섞이면 연산량 커짐
11. 비트맵의 경우 jpeg 사용하지 않음 png, 2의 n제곱으로 
12. 최적화 ( 필요없을때 꺼두는 것, 필요없는 데이터는 판단해서 삭제하는 것 )